#!/bin/bash

#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
php_version=$3

# Includes
source "/usr/local/sc/config"
source "$sc/func/main.sh"

if [ -z "$php_version" ];then
	php_version="8.2"
fi



#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN [PHP_VERSION]'
is_user_exist "$user"

test_php=$(echo "$php_version" | egrep "$php_versions")

if [ -z "$test_php" ];then
	echo "Error: PHP $php_version not found"
fi

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

domain_dir=/home/$user/web/$domain/
public_html="$domain_dir"public_html/
user_log_dir="$domain_dir"logs/
log_dir=/var/log/nginx/domains/
default_page_template="$templates_path"index.html

is_domain=$(get_object_value 'web' 'DOMAIN' "$domain" '$DOMAIN')

if [ ! -d "$public_html" ]; then
  mkdir -p $public_html
  chown $user:$user $public_html
fi

if [ ! -d "$user_log_dir" ]; then
  mkdir $user_log_dir
  chown $user:$user $user_log_dir
  chmod 0551 $user_log_dir
fi

if [ ! -d "$log_dir" ]; then
  mkdir -p $log_dir
fi

if [ ! -f "$log_dir""$domain".log ];then
	touch "$log_dir""$domain".log
fi
if [ ! -f "$log_dir""$domain".error.log ];then
	touch "$log_dir""$domain".error.log
fi

chown root:$user "$log_dir""$domain".log
chown root:$user "$log_dir""$domain".error.log
chmod 0640 "$log_dir""$domain".log
chmod 0640 "$log_dir""$domain".error.log

access_log_symlink="$user_log_dir""$domain".log
if [ ! -L "$access_log_symlink" ];then
  ln -s "$log_dir""$domain".log "$access_log_symlink"
fi
error_log_symlink="$user_log_dir""$domain".error.log
if [ ! -L "$error_log_symlink" ];then
  ln -s "$log_dir""$domain".error.log "$error_log_symlink"
fi
chown -h $user:$user "$user_log_dir""$domain".log
chown -h $user:$user "$user_log_dir""$domain".error.log


public_html_is_empty=$(find "$public_html" -empty -type d)
if [ ! -z "$public_html_is_empty" ];then
	sed "s/%domain%/$domain/g" $default_page_template > "$public_html"index.html
	chown $user:$user "$public_html"index.html
fi

if [ ! -z "$is_domain" ];then
  old_php_version=$(get_object_value 'web' 'DOMAIN' "$domain" '$PHP_VERSION')
  old_fpm_conf="/etc/php/$old_php_version/fpm/pool.d/$domain.conf"
  if [ -f "$old_fpm_conf" ];then
    rm "$old_fpm_conf"
    service php$old_php_version-fpm restart
  fi
fi

fpm_conf_template="$templates_path"fpm.conf.template
fpm_conf="/etc/php/$php_version/fpm/pool.d/$domain.conf"
sed "s/%user%/${user}/g" $fpm_conf_template | sed "s/%domain%/$domain/g" | sed "s/%php%/$php_version/g" > $fpm_conf

nginx_conf_template="$templates_path"nginx.conf.template
nginx_conf=/etc/nginx/sites-available/$domain
sed "s/%user%/${user}/g" $nginx_conf_template | sed "s/%domain%/$domain/g" | sed "s/%php%/$php_version/g" > $nginx_conf


site_enable_symlink=/etc/nginx/sites-enabled/$domain
if [ ! -L "$site_enable_symlink" ];then
  ln -s /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/
fi



if [ -z "$is_domain" ];then

  # Generating timestamp
  time_n_date=$(date +'%T %F')
  time=$(echo "$time_n_date" |cut -f 1 -d \ )
  date=$(echo "$time_n_date" |cut -f 2 -d \ )
  increase_user_value "$user" '$U_WEB_DOMAINS'

  # Adding domain in web.conf
echo "DOMAIN='$domain'\
 PHP_VERSION='$php_version'\
 TIME='$time' DATE='$date'" >> $USER_DATA/web.conf
   else
     update_object_value 'web' 'DOMAIN' "$domain" '$PHP_VERSION' "$php_version"
fi


systemctl restart nginx.service
service php$php_version-fpm restart

